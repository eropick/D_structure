우선 단순연결리스트를 구현해보자.

한 노드에는 하나의 링크필드와 하나의 데이터 필드가 들어가야한다.
그리고 마지막 노드는 NULL을 가리켜야 한다.

node1: data: 10 || link: NULL
node2: data: 20 || link: NULL
node3: data: 30 || link: NULL

라고 할 때 이들을 연결시켜보자

head -> node1 -> node2 -> node3 -> NULL

head : node1
node1: data: 10 || link: node2
node2: data: 20 || link: node3
node3: data: 30 || link: NULL

다음과 같은 형태로 표현이 된다.

단순 연결 리스트는 C로 어떻게 구현해야 하는가?
1. 노드의 정의 : 자기 참조 구조체
2. 노드의 생성 : 동적할당
3. 노드의 삭제 : free호출로 메모리 해제
제한이 없으므로 노드가 비었는지 가득찼는지의 판단은 유효하지 않다.

다음을 기억해서 단순 연결 리스트를 구현해보자.
error
insert_first
insert
Delete_first
Delete
print_list

insert와 delete의 반환형은 기존의 포인터 타입을 반환하는데 그 이유는 Call by value이기 때문이다.
포인터 변수를 매개변수로 받았는데 그 매개변수의 주소값을 변환해줬기 때문에 그 주소를 반환해야 반영되는 것.

다음은 일반 정수가 아닌 단어들을 저장하는 연결리스틀를 구현해보자.
기존에 구현한 연결리스트를 헤더로 만들어 요소만 문자열로 바꾸면 된다.